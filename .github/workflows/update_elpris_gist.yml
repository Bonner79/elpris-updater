name: Update Elpris Gist

on:
  schedule:
    - cron: '10 0 * * *'  # KÃ¶r varje dag kl. 00:10 UTC (02:10 svensk tid vid sommartid)
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install requests

      - name: Run update script
        env:
          GIST_ID: 38a1294a14afc7b05553c2658576a721
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python -c "
import requests, json
from datetime import datetime, timedelta

def get_swedish_date():
    now = datetime.utcnow()
    year = now.year
    march = datetime(year, 3, 31)
    while march.weekday() != 6:
        march -= timedelta(days=1)
    october = datetime(year, 10, 31)
    while october.weekday() != 6:
        october -= timedelta(days=1)
    is_dst = march <= now < october
    offset = timedelta(hours=2 if is_dst else 1)
    return now + offset

local = get_swedish_date()
year = local.year
date_str = local.strftime('%m-%d')
url = f'https://www.elprisetjustnu.se/api/v1/prices/{year}/{date_str}_SE3.json'
res = requests.get(url, timeout=5)
res.raise_for_status()
data = res.json()
hours = sorted(data, key=lambda x: x['SEK_per_kWh'])
cheapest = sorted([int(h['time_start'][11:13]) for h in hours[:4]])
payload = {
    'hours': cheapest,
    'updated': datetime.now().strftime('%Y-%m-%d %H:%M')
}
gist_url = f'https://api.github.com/gists/${{GIST_ID}}'
headers = {'Authorization': f'token ${{{{ secrets.GITHUB_TOKEN }}}}'}
r = requests.get(gist_url, headers=headers)
r.raise_for_status()
gist = r.json()
filename = list(gist['files'].keys())[0]
gist['files'][filename]['content'] = json.dumps(payload)
res = requests.patch(gist_url, headers=headers, json={ 'files': gist['files'] })
res.raise_for_status()
print('Gist updated:', payload)
"
